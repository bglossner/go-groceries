/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'

const MealsLazyRouteImport = createFileRoute('/meals')()
const GroceryListLazyRouteImport = createFileRoute('/grocery-list')()
const GoGroceryLazyRouteImport = createFileRoute('/go-grocery')()
const IndexLazyRouteImport = createFileRoute('/')()

const MealsLazyRoute = MealsLazyRouteImport.update({
  id: '/meals',
  path: '/meals',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/meals.lazy').then((d) => d.Route))
const GroceryListLazyRoute = GroceryListLazyRouteImport.update({
  id: '/grocery-list',
  path: '/grocery-list',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/grocery-list.lazy').then((d) => d.Route))
const GoGroceryLazyRoute = GoGroceryLazyRouteImport.update({
  id: '/go-grocery',
  path: '/go-grocery',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/go-grocery.lazy').then((d) => d.Route))
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/go-grocery': typeof GoGroceryLazyRoute
  '/grocery-list': typeof GroceryListLazyRoute
  '/meals': typeof MealsLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/go-grocery': typeof GoGroceryLazyRoute
  '/grocery-list': typeof GroceryListLazyRoute
  '/meals': typeof MealsLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/go-grocery': typeof GoGroceryLazyRoute
  '/grocery-list': typeof GroceryListLazyRoute
  '/meals': typeof MealsLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/go-grocery' | '/grocery-list' | '/meals'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/go-grocery' | '/grocery-list' | '/meals'
  id: '__root__' | '/' | '/go-grocery' | '/grocery-list' | '/meals'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  GoGroceryLazyRoute: typeof GoGroceryLazyRoute
  GroceryListLazyRoute: typeof GroceryListLazyRoute
  MealsLazyRoute: typeof MealsLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/meals': {
      id: '/meals'
      path: '/meals'
      fullPath: '/meals'
      preLoaderRoute: typeof MealsLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/grocery-list': {
      id: '/grocery-list'
      path: '/grocery-list'
      fullPath: '/grocery-list'
      preLoaderRoute: typeof GroceryListLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/go-grocery': {
      id: '/go-grocery'
      path: '/go-grocery'
      fullPath: '/go-grocery'
      preLoaderRoute: typeof GoGroceryLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  GoGroceryLazyRoute: GoGroceryLazyRoute,
  GroceryListLazyRoute: GroceryListLazyRoute,
  MealsLazyRoute: MealsLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

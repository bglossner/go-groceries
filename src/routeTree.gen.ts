/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as RecipeMealIdRouteImport } from './routes/recipe.$mealId'

const MealsLazyRouteImport = createFileRoute('/meals')()
const GroceryListLazyRouteImport = createFileRoute('/grocery-list')()
const GoGroceryLazyRouteImport = createFileRoute('/go-grocery')()
const IndexLazyRouteImport = createFileRoute('/')()

const MealsLazyRoute = MealsLazyRouteImport.update({
  id: '/meals',
  path: '/meals',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/meals.lazy').then((d) => d.Route))
const GroceryListLazyRoute = GroceryListLazyRouteImport.update({
  id: '/grocery-list',
  path: '/grocery-list',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/grocery-list.lazy').then((d) => d.Route))
const GoGroceryLazyRoute = GoGroceryLazyRouteImport.update({
  id: '/go-grocery',
  path: '/go-grocery',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/go-grocery.lazy').then((d) => d.Route))
const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const RecipeMealIdRoute = RecipeMealIdRouteImport.update({
  id: '/recipe/$mealId',
  path: '/recipe/$mealId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/settings': typeof SettingsRoute
  '/go-grocery': typeof GoGroceryLazyRoute
  '/grocery-list': typeof GroceryListLazyRoute
  '/meals': typeof MealsLazyRoute
  '/recipe/$mealId': typeof RecipeMealIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/settings': typeof SettingsRoute
  '/go-grocery': typeof GoGroceryLazyRoute
  '/grocery-list': typeof GroceryListLazyRoute
  '/meals': typeof MealsLazyRoute
  '/recipe/$mealId': typeof RecipeMealIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/settings': typeof SettingsRoute
  '/go-grocery': typeof GoGroceryLazyRoute
  '/grocery-list': typeof GroceryListLazyRoute
  '/meals': typeof MealsLazyRoute
  '/recipe/$mealId': typeof RecipeMealIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/settings'
    | '/go-grocery'
    | '/grocery-list'
    | '/meals'
    | '/recipe/$mealId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/settings'
    | '/go-grocery'
    | '/grocery-list'
    | '/meals'
    | '/recipe/$mealId'
  id:
    | '__root__'
    | '/'
    | '/settings'
    | '/go-grocery'
    | '/grocery-list'
    | '/meals'
    | '/recipe/$mealId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  SettingsRoute: typeof SettingsRoute
  GoGroceryLazyRoute: typeof GoGroceryLazyRoute
  GroceryListLazyRoute: typeof GroceryListLazyRoute
  MealsLazyRoute: typeof MealsLazyRoute
  RecipeMealIdRoute: typeof RecipeMealIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/meals': {
      id: '/meals'
      path: '/meals'
      fullPath: '/meals'
      preLoaderRoute: typeof MealsLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/grocery-list': {
      id: '/grocery-list'
      path: '/grocery-list'
      fullPath: '/grocery-list'
      preLoaderRoute: typeof GroceryListLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/go-grocery': {
      id: '/go-grocery'
      path: '/go-grocery'
      fullPath: '/go-grocery'
      preLoaderRoute: typeof GoGroceryLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recipe/$mealId': {
      id: '/recipe/$mealId'
      path: '/recipe/$mealId'
      fullPath: '/recipe/$mealId'
      preLoaderRoute: typeof RecipeMealIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  SettingsRoute: SettingsRoute,
  GoGroceryLazyRoute: GoGroceryLazyRoute,
  GroceryListLazyRoute: GroceryListLazyRoute,
  MealsLazyRoute: MealsLazyRoute,
  RecipeMealIdRoute: RecipeMealIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
